{% extends "base.jinja2" %}
{% import "categories/macros.jinja2" as catecro with context %}
{% import "ajax_macros.jinja2" as ajax_macro %}
{% import "basic_macros.jinja2" as b_macro with context %}

{% block content %}

    <div class="treeview-container">
        <div id="treeview" class="treeview">
        </div>
    </div>

    {# 削除モーダル #}
    {{ b_macro.confirm_modal(modal_id='delete_confirm', btn_class="btn-danger") }}
{% endblock %}

{% block body_script %}
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <link href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css " rel="stylesheet">

    <script src="{{ static('js/bootstrap-treeview.js') }}"></script>
    <script src="{{ static("categories/treeview.js") }}"></script>

    <script>
        {{ ajax_macro.django_ajax_init() }}

        // deleteConfirm 設定
        var deleteConfirm = $('#delete_confirm');
        deleteConfirm.find('.modal-message').html('このカテゴリ配下の記事は、すべて「カテゴリなし」の状態になります。(記事自体は削除されません)<br />カテゴリを削除しますか？');
        deleteConfirm.find('.modal-submit').click(deleteCategory);
        var deleteNode;

        function getData() {
            var tree = {{ catecro.make_category_tree(None, False) }};
            return tree;
        }
        var helper;

        $(function () {
            helper = new TreeViewHelper($('#treeview'), getData());
            helper.handler.onMovingNode = function (target_node, new_parent_node) {
                var target_path = helper.getPath(target_node);
                var new_parent_path = helper.getPath(new_parent_node);
                return movePath(target_path, new_parent_path);
            };
            helper.handler.onClickedDeleteNode = function (node) {
                deleteNode = node;
                //モーダル表示
                deleteConfirm.modal('show');
            };
        });

        /**
         * カテゴリの移動
         * @param targetPath 移動するカテゴリパス
         * @param newParentPath 移動先カテゴリパス
         * @returns {boolean} 移動成功可否
         */
        function movePath(targetPath, newParentPath) {
            var res = false;
            $.ajax({
                type: 'POST',
                url: '{{ url('categories:move_category') }}',
                data: {'target_path': targetPath, 'new_parent_path': newParentPath},
                dataType: 'json',
                timeout: 10000,
                async: false // TODO:とりあえず非同期にしている。非同期で、サーバーレスポンスを得られるまで待機するようなしくみにできれば尚良。(他のjsonメソッドも同様)
            }).done(function (data) {
                console.log(data);
                if (data['state'] === true) {
                    res = true;
                } else {
                    alert(data['message']);
                }
            }).fail(function () {
                console.log(arguments);
                showErrorAndReload();
            });
            return res;
        }

        /**
         * カテゴリの削除
         */
        function deleteCategory() {
            var targetPath = helper.getPath(deleteNode);

            $.ajax({
                type: 'POST',
                url: '{{ url('categories:delete_category') }}',
                data: {'target_path': targetPath},
                dataType: 'json',
                timeout: 10000,
                async: false
            }).done(function (data) {
                console.log(data);
                if (data['state'] === true) {
                    helper.deleteNode(deleteNode);
                } else {
                    alert(data['message']);
                }
            }).fail(function () {
                console.log(arguments);
                showErrorAndReload();
            });
            deleteConfirm.modal('hide');
        }

        function showErrorAndReload() {
            alert('エラーが発生したため、リロードします');
            location.reload();
        }
    </script>
{% endblock %}
